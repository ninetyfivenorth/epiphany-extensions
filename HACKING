SVN guidelines for epiphany-extensions
**************************************

DO NOT commit to the SVN unless you have been given explicit permission from
me (chpe@gnome.org) or, if you want to check in to
extensions/$extension/ directory, from the extension maintainer.
(This doesn't apply to certain people, but they know who they are :)

Please send patches for the build & configure infrastructure to me at
chpe@gnome.org, or to the epiphany mailing list at
http://lists.gnome.org/mailman/listinfo/epiphany-list

Send patches for the individual extensions to the maintainer listed in the 
AUTHORS file.

If you are a translator feel free to add new translations, mark strings for
translation, fix typos, etc.

Coding style
************

We adhere to the epiphany coding style. For your convenience, here are a few
guidelines, from epiphany's HACKING file:

In order to keep the code nice and clean we have a few requirements you'll
need to stick to in order to get your patch accepted:

- use 8-space tabs for indentation
- curly brackets are on a new line
- please compare with NULL or FALSE instead of using "!"
- callback functions have a suffix _cb

  Comment blocks are written like this:
  
/**
 * bla_bla_cb: This is an example comment block
 */

SVN Checkin rules:
******************

When committing a patch to svn, you must use a checkin comment that fully
describes the changes made. If the checkin is related to a bug, reference
the bug number. Example:

        When removing a toolbar, make its items available again in the toolbar
        editor. (Bug #131182)

Checkin comments MUST use the UTF-8 encoding.

If you forget to check in some changes that belonged in the same commit (e.g. omitted
a file), you must copy the checkin comment from the previous, incomplete checkin, and
additionally reference that commit's svn revision number. DO NOT use meaningless checkin
comments such as "forgotten file" !
If you make a major mistake in the checkin comment (e.g empty, or you've forgotten to cite
the bug numbers), you must create a new checkin that touches all files the original checkin
changed (just using whitespace changes is ok), and in the new checkin comment must note that
this new checkin fixes the original checkin, referencing it by its SVN revision number.

Do NOT commit to this module without permission from a maintainer. See the MAINTAINERS file
for who they are.

